# Setting up Mermaid {#sec-setup}

Mermaid is software designed to turn pieces of text into various kinds of diagrams.  We'll use it to create argument maps, visual representations of the structure of an argument or debate.  This page has instructions for two ways of setting up this software:  [you can use a website called Mermaid Live](#using-mermaid-live), or you can [download and install](#using-mermaid-with-obsidian) notetaking software called [Obsidian](https://obsidian.md/).  

::: {.callout-note}
You don't need to read both sections of this chapter.  Pick one of the two options, and just read that section.  
:::

Both options for using Mermaid are completely free, and either one will work to generate argument maps for this course.  [Mermaid Live](#using-mermaid-live) doesn't require any setup — you just open up a website and start typing — but has very limited functionality for saving your work.  Using [Obsidian](#using-mermaid-with-obsidian) requires you to download and install some software on your computer.  It's easy to use Obsidian to save your argument maps; but the software hasn't been vetted by our campus IT office.  That means there's a security risk installing this software.  

::: {.callout-important}
Do not store any sensitive information in Obsidian. 
:::


## Using Mermaid Live

You don't need to download or install anything to use Mermaid Live:  simply open a web browser to <https://mermaid.live>, and you should see something like @fig-mermaid-live.  Since you'll be creating argument maps pretty regularly in this class, you'll probably want to bookmark that link.  

![Mermaid Live: <https://mermaid.live/>](img/mermaid-live.png){#fig-mermaid-live}

We'll be focusing on the text pane (left) and preview pane (right).  For now you can minimize the actions pane.  Click anywhere in the text pane, hit ⌘+a (Control+a on Windows) to select all, then hit backspace or delete to clear out whatever default demo text Mermaid has for you.  Type the following:  

::: {.callout-important}
Click "Show the code" to show the code to create this argument map
:::

```{mermaid}
%%| echo: true
flowchart TB

P1(I'm a premise)
C(I'm the conclusion)

P1 --> C
```


Except, the colors will probably be different.  This is because I'm using a special theme for argument maps, with highlighting for premises, conclusions, and objections.  Find the Config tab, just above the code box.  Clear out that tab, and copy and paste the following:  

```json
{
	"themeCSS": "#Argument rect {stroke:transparent;fill#e5e5e5!important;} #Argument span {color:transparent;} .edgeLabel {color:#888; font-size:0.9em; margin-right:3px} .edgeLabel i {color:crimson!important;} .edge-pattern-dotted {stroke:crimson!important;} .edge-pattern-solid {stroke:blue!important;} #flowchart-pointEnd {fill:blue;} g rect {fill:white!important;} g[id*='P'] * {stroke:blue!important;fill:white!important;} g[id*='O'] * {stroke:crimson!important; } g[id*='OL'] * {color:white!important;fill:red!important;} g[id*='A'] * {stroke:blue!important;fill:blue!important;color:white!important;} g[id*='C'] * {fill:black!important;color:white!important;font-weight:bold;}"
}
```

::: {.callout-note}
Mermaid Live doesn't have a sense of different "documents," so when you delete a previous map to create a new one the theming in Config should stay the same.  If your theming gets messed up somehow, you can try the History panel or just copy-and-paste the block up above. 
:::

Once you've created a map, bring up the "action" pane and hit the PNG button to download an image file that you can turn in with a quiz or other assignment.  

Unfortunately, saving the text/source code for a Mermaid Live diagram is a little more complicated.  First we need to make sure you understand how your computer thinks about files and where they live. 

### How your computer is organized

If you use your computer primarily through free-text search boxes — just type in a word or phrase and scroll through the results — you might not be used to thinking about how your computer is actually organized.  One side effect of Mermaid Live is that you'll need to be deliberate about where your save your argument maps.  

Your computer is organized like a physical filing cabinet, with drawers containing folders containing (paper) files.  (Except the drawers are also called folders, and you can have folders inside of folders inside of folders inside of folders.)  Every file on your computer lives in its particular folder, and everything containing files is a folder.  This includes your desktop, which is a representation of a special folder tied to your user account on your computer.  Apps are also collections of files organized together into folders; installing an app means copying that folder structure into certain places on your device and configuring the operating system to interact with the app's files.  All computers are organized like this, including your phone, a smartwatch, an Alexa or Siri, a Ring doorbell, etc.  

@fig-folders shows you how I keep all the different files for our class organized into a collection of folders, as viewed using Mac OS's Finder app in column mode.  (Windows has a similar app called File Explorer.)  The `Teaching` folder contains everything related to all of the classes I've taught, past and present.  `critical reasoning` is dedicated to this specific class, with separate folders for each year.  Inside I have further folders, for things like quizzes, the syllabus, writing assignments, and final grades.  The `slides` folder contains all of the lecture slides.  At the bottom of the window, I have Finder configured to show the path, or the location of the particular folder or file being highlighted.  The path starts with my laptop's hard drive (this might look like `C:` on Windows), then the `Users` folder.  The `Users` folder contains files specific to each account on this computer.  There's only one user account on my laptop, `danhicks`, but some systems — like our campus email server — will have thousands of user accounts.  Imagine how many user folders must be in the Gmail and Facebook servers.  

![Files organized into folders, as viewed by Mac OS's Finder in column mode](img/folders.png){#fig-folders}

Inside my user folder, `danhicks`, is a specific folder that I sync to the cloud using `Google Drive`.  All of my teaching files are contained in this folder, so that they're synced automatically.  I also backup my files to an external hard drive using the Mac app Time Machine, plus the cloud service Backblaze.  Triple protection in case something happens to my computer!  (The "cloud" is really just physical computers located somewhere else, usually in giant warehouse-like buildings near cheap sources of electricity.)  

Thanks to fast search software, we've gotten used to not having to interact with files and folder organization directly in a lot of cases.  I don't need to know exactly where a certain form is located on the campus website; a web search will turn it up in a few seconds.  But deliberately organizing your own files into folders is important.  For one thing, it makes it much easier to find related files, especially files with similar names or content.  I've taught a lot of classes over the last 15+ years.  So if I'm looking for the syllabus for the Fall 2020 version of Critical Reasoning, a search for `syllabus` is going to turn up a lot of results.  It's much faster to go to the folder for Critical Reasoning, then Fall 2020, and then the syllabus folder.  Then, if I'm looking at that syllabus and want to look up the writing assignment I used in that course, I don't need to remember exactly what I called the writing assignment file or what keywords might bring it up.  I just click a couple of times to open the folder for the writing assignment.  

There's also a technical reason for not leaving all of your files on your desktop.  Your computer assumes that files on your desktop are important and frequently accessed.  So it keeps a kind of pre-loaded copy of the file in memory, so that it can open the file quickly whenever you might need it.  Having hundreds or even thousands of files on your desktop can seriously slow down your computer.  



### Saving your work from Mermaid Live

::: {.callout-important}
## Mermaid saves your history, not separate maps

The History pane in Mermaid can be used to save your history, as you create and edit argument maps.  But it doesn't have distinct files or maps, and you can't give the saves meaningful names.  

You'll need to manually save your work by copying and pasting to a file on your computer.  
:::

::: {.callout-tip}
Before you save your work for the first time, create **a designated folder for all of the work for this course**.  I'm going to call this **the course folder**.  The Documents folder on your computer is a good place to do this.  If you don't know how to find your Documents folder and create a new folder there, your instructor and TA can help.  
:::

Once you've created the course folder, follow these steps to save a new argument map.  Try them out with the example you typed in to the text pane a few minutes ago.  

1. Open the app TextEdit (on a Mac) or Notepad (on Windows).

::: {.callout-note}
You can use any [plaintext](https://en.wikipedia.org/wiki/Plain_text) editor of your choice.  But Microsoft Word and Google Docs *won't* work.
:::

2. Create a new file, and copy and paste the argument map text from Mermaid Live into the new file. 
3. *On a Mac*: You may need to go to Format -> Make Plain Text.  See @fig-plaintext. 

	![Changing TextEdit to plaintext mode](img/plaintext.png){#fig-plaintext} 

4. Hit ⌘+s (Mac) or Control+s (Windows) to bring up the save dialog.  
	- **Make sure you're saving to the course folder.**
	- **Make sure the file type is set to "plain text" or "txt".**  
	![The Mac save dialog, showing that I'm saving this to the course folder and that the file type is plain text](img/save.png){#fig-save}

When you want to open up a saved argument map, you'll need to follow these steps. 

1. Find the argument map file in the course folder, and open it with your text editor.  
2. Select the entire argument map text, then copy it. 
3. Open Mermaid Live. 
3. Select the example text in the text pane, then paste the argument map text. 



## Using Mermaid with Obsidian

[Obsidian](https://obsidian.md/) is notetaking and [knowledge base](https://en.wikipedia.org/wiki/Knowledge_base) software.  If you've used the website Notion, it's somewhat similar.  Obsidian has built-in support for Mermaid.  Creating argument maps is just a little more complicated than using Mermaid Live, but as an app on your computer it's simple to save and open argument maps.  

::: {.callout-important}
If you're going with this option, remember that OIT has *not* vetted Obsidian for security and privacy.  Be sure not to store any sensitive information in Obsidian. 
:::

### Installing Obsidian

To install and setup Obsidian follow these steps:  

1. Navigate a web browser to <https://obsidian.md/> and click the download link for your operating system.  After the download finishes, run the installer.  
2. Open Obsidian.  It should show you the "open vault" window in @fig-obsidian. 
	- If you already created [a course folder](#saving-your-work-from-mermaid-live), choose "Open folder as vault," and select your course folder as an Obsidian vault.  This won't mess up your existing files in any way; Obsidian plays nicely with other apps.  
	- If you haven't already created a course folder, choose "Create new vault."  Give your vault/course folder a name like "Critical Reasoning" and set its location inside your Documents folder.
	
	![Obsidian's "open vault" window](img/obsidian.png){#fig-obsidian}
3. While these two steps are all we need to create diagrams, we need one extra step to get the coloring of the diagrams right for argument maps.  We'll do this using a CSS theme.  Download and unzip the file [mermaid.css](https://gist.github.com/dhicks/7929b170c666cba8cec322d62c22622a/archive/0d5e0470ed709385527d6c9b84b7e4348d7280dd.zip).  
4. In Obsidian, open Settings (gear in the lower-left), then Appearance.  
	- Look for Themes, then the folder icon.  
	- Click on it to open the themes folder. 
	
	![Opening your vault's themes folder](img/obsidian-themes.png){#fig-obsidian-themes}
5. This should open a folder called `themes` in your computer's file browser.  Move `mermaid.css` (from step 3) into `themes`. 
6. Back in Obsidian, click on the Manage button in Themes.  Select `mermaid`. 

All ready to go! 

### Creating an argument map in Obsidian

You can add multiple argument maps to any Obsidian note.  Your first time through, follow these steps.  

1. Create a new note (you can click the "New Note" icon on the upper-left, or hit ⌘+n on a Mac or Control-N on Windows).  
2. (Optional) Give the note a name, like "first argument map."  Obsidian automatically saves any changes to your files.  
3. Type the following: 

::: {.callout-important}
Click "Show the code" to show the code to create this argument map
:::

```{mermaid}
%%| echo: fenced
flowchart TB

P1(I'm a premise)
C(I'm the conclusion)

P1 --> C
```

::: {.callout-note}
If nothing seems to happen, try replacing the braces with spaces on the first line: ` ``` mermaid `
:::

4. Hover over the image of your argument map.  Click the `</>` icon to switch back to editing the text of your map. 

![Switching an Obsidian argument map back to edit mode](img/obsidian-edit.png){#fig-obsidian-edit}


::: {.callout-important}
In the rest of this tutorial, I won't include the ` ```{mermaid}` line at the top or the ` ``` ` at the end.  You need to use these special symbols (called *code fencing*) to tell Obsidian that it needs to run this chunk through Mermaid. 
:::

### Saving an argument map image

Obsidian doesn't have a built-in way to generate image files or Word docx files.  (I haven't tested it, but it looks like the plugin [Obsidian Pandoc](obsidian://show-plugin?id=obsidian-pandoc) can do this for you.)  There are two ways to generate an image file that you can turn in with an assignment or quiz.  

One option is to take a screenshot.  The steps to do this after different for [Windows](https://support.microsoft.com/en-us/topic/00246869-1843-655f-f220-97299b865f6b) vs. [Mac](https://support.apple.com/en-us/HT201361).  

::: {.callout-note}
If you take a screenshot, please just include the argument map.  I don't need to see the source code or whatever else happens to be on your screen.
:::

The other options is to export the note as a PDF file.  To do this, click on the three dots icon (upper right) to open the More Options menu.  Export to PDF is at the bottom.  After clicking the Export to PDF button, a save dialog will pop up.  

However you generate the image file, I recommend saving it in the same folder as the argument map itself, so that you can always find them together.  

### Doing more with Obsidian

For this class, this is pretty much all you need to know about Obsidian.  But it's much more powerful:  you can add formatting (including emphasis, bold, headings, lists), insert images and links, and visualize a folder of notes as a network, without adding any other plugins.  There are lots of tutorials for Obsidian online.  

